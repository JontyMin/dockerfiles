name: "build"

on:
  push:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'build/**'
  pull_request:
    branches: [ master ]
    paths:
      - 'src/**'
      - 'build/**'

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  ALIYUN_DOCKERHUB: ${{ secrets.ALIYUN_DOCKERHUB }}
  ALIYUN_DOCKERHUB_USERNAME: ${{ secrets.ALIYUN_DOCKERHUB_USERNAME }}
  ALIYUN_DOCKERHUB_TOKEN: ${{ secrets.ALIYUN_DOCKERHUB_TOKEN }}

jobs:
  build-hub:
    runs-on: ubuntu-20.04
    name: Build image to hub
    steps:
      # checkout source code
      - uses: actions/checkout@v2

      # login docker hub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{env.DOCKERHUB_USERNAME}}
          password: ${{env.DOCKERHUB_TOKEN}}

      # arm64    
      - uses: uraimo/run-on-arch-action@v2.3.0
        name: use arm64
        id: runcmd
        with:
          arch: aarch64 # cpu架构
          distro: ubuntu20.04 # linux发行版
          shell: /bin/bash # 执行的shell
          githubToken: ${{ github.token }} # Not required, but speeds up builds by storing container images in a GitHub package registry.
          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)

      # build
      - name: build
        shell: pwsh
        working-directory: ./build
        run: ./build.ps1

  build-aliyun:
    runs-on: ubuntu-20.04
    name: Build image to aliyun
    steps:
      # checkout source code
      - uses: actions/checkout@v2

      # login docker hub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{env.ALIYUN_DOCKERHUB}}
          username: ${{env.ALIYUN_DOCKERHUB_USERNAME}}
          password: ${{env.ALIYUN_DOCKERHUB_TOKEN}}

      # arm64    
      - uses: uraimo/run-on-arch-action@v2.3.0
        name: use arm64
        id: runcmd
        with:
          arch: aarch64 # cpu架构
          distro: ubuntu20.04 # linux发行版
          shell: /bin/bash # 执行的shell
          githubToken: ${{ github.token }} # Not required, but speeds up builds by storing container images in a GitHub package registry.
          # Set an output parameter `uname` for use in subsequent steps
          run: |
            uname -a
            echo ::set-output name=uname::$(uname -a)

      # build
      - name: build
        shell: pwsh
        working-directory: ./build
        run: ./build.ps1 $True

  sync-aliyun:
    runs-on: ubuntu-20.04
    name: Sync image to aliyun
    steps:
      # checkout source code
      - uses: actions/checkout@v2

      # login docker hub
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{env.ALIYUN_DOCKERHUB}}
          username: ${{env.ALIYUN_DOCKERHUB_USERNAME}}
          password: ${{env.ALIYUN_DOCKERHUB_TOKEN}}

      # build
      - name: build
        shell: pwsh
        working-directory: ./build
        run: ./sync_imgs.ps1
